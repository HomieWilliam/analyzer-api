openapi: 3.0.3
info:
  title: Phrase Analyzer API
  description: API que analisa uma frase e retorna a contagem de palavras, vogais e consoantes. Inclui autenticação via JWT.
  version: 1.1.0

servers:
  - url: http://localhost:8080
    description: Servidor local de desenvolvimento

paths:
  /api/v1/login:
    post:
      summary: Autenticação
      description: Recebe username e password e retorna um token JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              username: "admin"
              password: "admin123"
      responses:
        '200':
          description: Token JWT retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Usuário ou senha inválidos"

  /api/v1/analyze:
    post:
      summary: Analisar uma frase
      description: Recebe uma frase e retorna o número de palavras, vogais e consoantes. Requer JWT no header Authorization.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzerRequest'
            example:
              phrase: "Hello World"
      responses:
        '200':
          description: Resultado da análise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerResponse'
              example:
                words: 2
                vowels: 3
                consonants: 7
        '400':
          description: Erro de validação na entrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "invalid character '}' looking for beginning of object key string"
        '401':
          description: Não autorizado / JWT inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Token inválido ou expirado"

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Nome de usuário
          example: "admin"
        password:
          type: string
          description: Senha do usuário
          example: "admin123"
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT para autenticação nas rotas protegidas
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    AnalyzerRequest:
      type: object
      required:
        - phrase
      properties:
        phrase:
          type: string
          description: Frase a ser analisada
          example: "Eu sou incrível"
    AnalyzerResponse:
      type: object
      properties:
        words:
          type: integer
          description: Quantidade de palavras na frase
          example: 3
        vowels:
          type: integer
          description: Quantidade de vogais na frase
          example: 7
        consonants:
          type: integer
          description: Quantidade de consoantes na frase
          example: 11
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
